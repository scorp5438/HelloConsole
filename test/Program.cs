// // // Исчезновение линий

// char[,] map = 
// {
//     { '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#',}, // индекс 0
//     { '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#',},
//     { '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#',},
//     { '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#',},
//     { '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#',},
//     { '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#',},
//     { '#', '#', '#', ' ', ' ', ' ', '#', '#', ' ', '#', '#', ' ', ' ', '#',},
//     { '#', '#', '#', ' ', ' ', ' ', ' ', '#', '#', ' ', ' ', ' ', ' ', '#',},
//     { '#', '#', '#', '#', '#', ' ', '#', '#', '#', '#', '#', '#', '#', '#',},
//     { '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#',},
//     { '#', ' ', ' ', '#', '#', ' ', ' ', ' ', ' ', '#', '#', ' ', ' ', '#',},
//     { '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#',},
//     { '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#',},
//     { '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#',},  // индекс 13
// };

// void drowMap(char[,] arr)
// {
//     for (int i = 0; i < map.GetLength(0); i++)
//     {
//         for (int j = 0; j < map.GetLength(1); j++)
//         {
//             Console.Write(arr[i, j]);
//         }
//         Console.WriteLine();
//     }
// }
// drowMap(map);

// int row = 10;
// while(row > 0)
// {
//     check(map);
//     row--;
// }

// check(map);
// void check (char[,] arr)
// {
//     int row = 0;
//     int count = 0;
//     for (int i = 1; i < arr.GetLength(0) - 1; i++)
//     {
//         for (int j = 1; j < arr.GetLength(1) - 1; j++)
//         {
//             if (arr[i, j] == '#')
//             {
//                 count++;
//                 if (count == 12)
//                 {
//                     row = i;
//                 }
//             }
//         }
//         count = 0;
//     }
//     chenge(map, row);
// }

// void chenge(char[,] arr, int x)
// {
//     for (int i = x; i > 1; i--)
//     {
//         for (int j = 1; j < arr.GetLength(1) - 1; j++)
//         {
//             arr[i, j] = arr[i - 1, j];
//         }
//     }
// }

// Console.WriteLine();
// drowMap(map);

// // ****************************************************************************************************************************************
// // ****************************************************************************************************************************************
// Падающий кубик с управлением + исчезание заполненной линии

// 

// *****************************************************************************************************************

// Console.CursorVisible = false;

// char[,] map =
// {
//     {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
//     {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
//     {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
//     {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
//     {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
//     {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
//     {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
//     {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
//     {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
//     {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
//     {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
//     {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
//     {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
//     {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
//     {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
//     {'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'}
// };


// char [,] lShape = 
// {
//     {'#', '#', '#'},
//     {'#', ' ', ' '},
// };

// char [,]lShapeV2 = 
// {
//     {'#', '#'},
//     {' ', '#'},
//     {' ', '#'}
// };

// char [,] lShapeV3 = 
// {
//     {' ', ' ', '#'},
//     {'#', '#', '#'},
// };

// char [,]lShapeV4 = 
// {
//     {'#', ' '},
//     {'#', ' '},
//     {'#', '#'}
// };

// int elemX = 5, elemY = 10;
// int number = 1;
// while(true)
// {
//     drowMap(map);

//     switch (number)
//     {
//         case 1:
//             drowElem(lShape, elemX, elemY);
//             break;
//         case 11:
//             drowElem(lShapeV2, elemX, elemY);
//             break;
//         case 21:
//             drowElem(lShapeV3, elemX, elemY);
//             break;
//         case 31:
//             drowElem(lShapeV4, elemX, elemY);
//             break;
//     }

//     ConsoleKeyInfo key = Console.ReadKey();
//     if (key.Key == ConsoleKey.Spacebar)
//     {
//         number += 10;

//         if (number > 31) number = 1;
//         Console.Clear();
//     }

// }

// void drowMap(char[,] arr)
// {
//     Console.SetCursorPosition(0, 0);
//     for (int i = 0; i < arr.GetLength(0); i++)
//     {
//         for (int j = 0; j < arr.GetLength(1); j++)
//         {
//             Console.Write(arr[i, j]);
//         }
//         Console.WriteLine();
//     }
// }

// void drowElem(char[,] arr, int x, int y)
// {
//     Console.SetCursorPosition(y, x);
//     for (int i = 0; i < arr.GetLength(0); i++)
//     {
//         for (int j = 0; j < arr.GetLength(1); j++)
//         {
//             Console.Write(arr[i, j]);
//         }
//         Console.SetCursorPosition(y, x + 1 + i);
//     }
//      Console.SetCursorPosition(30, 30);
// }
